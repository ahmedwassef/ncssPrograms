
{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}


{% set classes = [
  'node',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  'clearfix',
] %}

{# {{dd(node.field_event_time)}} #}
{% set title = node.title.value %}
{% set image = (node.field_image.entity.fileuri) %}
{% set date = node.created.value %}
{% set description = node.body.value %}
{% set summary = node.body.summary_processed|default(null) %}
{% set sections = node.field_sections %}
{% set link = node.field_url[0].value %}
{% set tags = node.field_tags.value %}

<div class="container-fluid bg-white position-relative modern-section-pattern">
  <svg class="section-bg-pattern d-none d-md-block" width="180" height="180" style="position:absolute;top:-40px;right:0;z-index:0;opacity:0.15;pointer-events:none;" aria-hidden="true">
    <use href="/themes/ncss/frontend/img/elements.svg#svgView(viewBox(0,0,90,90))"/>
  </svg>
  <div class="container ">
    <nav id="breadcrumb" style="--bs-breadcrumb-divider: '&gt;';" aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">{{ "Home"|t }}</a></li>
        <li class="breadcrumb-item active" aria-current="page">{{ title }}</li>
      </ol>
    </nav>
  </div>

  <div class="container">
    <h1 class="page-heading">
      {{ title }}
    </h1>
    {% if summary %}
    <p class="page-description">
        {{ summary|raw }}
    </p>
    {% endif %}
  </div>

  <div class="container my-5">
    <div class="row">
      {% if (child_links is defined and child_links|length > 0)  or ( parent_node is defined and parent_node|length > 0)   %}
        <div class="col">
          <div class="card modern-card rounded-4 border-0 mb-3 shadow-lg mb-5 bg-body rounded position-relative overflow-hidden">
            <svg class="card-bg-pattern d-none d-md-block" width="90" height="90" style="position:absolute;bottom:-20px;left:-20px;z-index:0;opacity:0.12;pointer-events:none;" aria-hidden="true">
              <use href="/themes/ncss/frontend/img/elements1.svg#svgView(viewBox(0,0,22,22))"/>
            </svg>
            <div class="card-body d-flex flex-column gap-3 position-relative" style="z-index:1;">
              {% if is_parent %}
                {# If this is a parent node, list current node as active and all child nodes #}
                <a href="{{ url('<current>') }}" class="btn bg-primary text-primary bg-opacity-10 d-flex w-100">

                  {{ title }}
                </a>

                {% for child in child_links %}
                  <a href="{{ child.url }}" class="btn text-secondary d-flex w-100">

                     {{ child.title }}
                  </a>
                {% endfor %}
              {% else %}
                {# If this is a child node, list parent and all siblings #}
                {% if parent_node is defined %}
                  <a href="{{ parent_node.url }}" class="btn text-secondary d-flex w-100">

                    {{ parent_node.title }}
                  </a>
                {% endif %}

                {% if sibling_links is defined %}
                  {% for sibling in sibling_links %}
                    <a href="{{ sibling.url }}" class="btn {{ sibling.is_current ? 'bg-primary text-primary bg-opacity-10' : 'text-secondary' }} d-flex w-100">

                      {{ sibling.title }}
                    </a>
                  {% endfor %}
                {% endif %}
              {% endif %}
            </div>
          </div>
        </div>
      {% endif %}
      <div class="{{ ((child_links is defined and child_links|length > 0 ) or ( parent_node is defined and parent_node|length > 0 )) ? 'col-sm-6 col-md-9 ' : 'col-md-12' }}">
        <div class="section-description mb-4 theme-container">
          {{ description|raw }}
        </div>
        {{ content.field_sections }}

      </div>
    </div>
  </div>
</div>
